{"version":3,"sources":["webpack:///./src/pages/projects.js","webpack:///./src/components/Card.js"],"names":["ProjectsPage","data","location","projects","site","siteMetadata","projectsFound","length","headProps","title","keywords","thin","Cards","slice","map","card","index","key","pageQuery","styled","div","media","sm","Card","to","href","className","description","details","tags","RootA","Flex","Details","Tags","tag","themed","A","theme","neutralLighterAlt","neutralLighter","black","neutralSecondary","neutralLight","neutralTertiary","serifFont"],"mappings":"qwBA2DeA,UAjDM,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACpBC,EAAaF,EAAKG,KAAKC,aAAvBF,SACFG,EAAgBH,GAAYA,EAASI,OAE3C,OACE,kBAAC,IAAD,CACEC,UAAW,CACTC,MAAO,WACPC,SAAU,CAAC,WAAY,gBAAiB,SAE1CR,SAAUA,GAEV,qBACES,MAAI,GAKJ,0CAEF,yBAME,kBAACC,EAAD,KACGN,GACCH,EAASU,MAAM,EAAG,GAAGC,KAAI,SAACC,EAAMC,GAAP,OACvB,yBAAKC,IAAKD,GACR,kBAAC,IAASD,QAIjBT,GAAiBH,EAASI,OAAS,GAClC,kBAACK,EAAD,KACGN,GACCH,EAASU,MAAM,EAAG,GAAGC,KAAI,SAACC,EAAMC,GAAP,OACvB,yBAAKC,IAAKD,GACR,kBAAC,IAASD,WAYrB,IAAMG,EAAS,YAehBN,EAAQO,IAAOC,IAAV,kEAAGD,CAAH,8FAUPE,IAAMC,GAVC,M,kFC5EX,oDAwCeC,IA/BF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWjB,EAAxB,EAAwBA,MAAOkB,EAA/B,EAA+BA,YAAaC,EAA5C,EAA4CA,QAASC,EAArD,EAAqDA,KAArD,OACX,kBAACC,EAAD,CAAON,GAAIA,EAAIC,KAAMA,EAAMC,UAAWA,GACpC,6BACGjB,GAAS,4BAAKA,GACdkB,GAAe,2BAAIA,GACpB,kBAACI,EAAD,KACGH,GAAW,kBAACI,EAAD,KAAUJ,GACrBC,GACC,kBAACI,EAAD,KACGJ,EAAKf,KAAI,SAAAoB,GAAG,OACX,kBAAC,IAAD,CAAKjB,IAAKiB,EAAKC,QAAM,GAClBD,WAsBjB,IAAMJ,EAAQX,YAAOiB,KAAV,8DAAGjB,CAAH,iiBAYsB,qBAAGkB,MAAkBC,qBAKhC,qBAAGD,MAAkBE,kBAG9B,qBAAGF,MAAkBG,SAKrB,qBAAGH,MAAkBI,oBASE,qBAAGJ,MAAkBK,gBAcnDX,EAAOZ,IAAOC,IAAV,6DAAGD,CAAH,wGAQJa,EAAUb,IAAOC,IAAV,gEAAGD,CAAH,mDACF,qBAAGkB,MAAkBM,kBAE5BC,KAIEX,EAAOd,IAAOC,IAAV,6DAAGD,CAAH","file":"component---src-pages-projects-js-cd5523e08bf228c0018d.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"components/Layout\"\nimport Section from \"components/Section\"\nimport Card from \"components/Card\"\n\nimport { media } from \"utils/mixins\"\n\nconst ProjectsPage = ({ data, location }) => {\n  const { projects } = data.site.siteMetadata\n  const projectsFound = projects && projects.length\n\n  return (\n    <Layout\n      headProps={{\n        title: \"projects\",\n        keywords: [\"projects\", \"brettinternet\", \"work\"],\n      }}\n      location={location}\n    >\n      <Section\n        thin\n        css={`\n          padding-bottom: 0;\n        `}\n      >\n        <h2>Projects:</h2>\n      </Section>\n      <Section\n        css={`\n          padding-top: 0;\n          padding-bottom: 0;\n        `}\n      >\n        <Cards>\n          {projectsFound &&\n            projects.slice(0, 2).map((card, index) => (\n              <div key={index}>\n                <Card {...card} />\n              </div>\n            ))}\n        </Cards>\n        {projectsFound && projects.length > 2 && (\n          <Cards>\n            {projectsFound &&\n              projects.slice(2, 4).map((card, index) => (\n                <div key={index}>\n                  <Card {...card} />\n                </div>\n              ))}\n          </Cards>\n        )}\n      </Section>\n    </Layout>\n  )\n}\n\nexport default ProjectsPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        projects {\n          title\n          description\n          details\n          href\n        }\n      }\n    }\n  }\n`\n\nconst Cards = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n\n  a {\n    margin-top: 1em;\n    margin-bottom: 1em;\n  }\n\n  ${media.sm`\n    flex-direction: row;\n\n    & > div {\n      width: 50%;\n\n      &:first-child a {\n        margin-left: 0;\n      }\n\n      &:last-child a {\n        margin-right: 0;\n      }\n    }\n    \n    a {\n      margin: 1em;\n    }\n  `}\n`\n\n//// add project images\n// const Image = () => (\n//   <StaticQuery\n//     query={graphql`\n//       query {\n//         placeholderImage: file(relativePath: { eq: \"gatsby-astronaut.png\" }) {\n//           childImageSharp {\n//             fluid(maxWidth: 300) {\n//               ...GatsbyImageSharpFluid\n//             }\n//           }\n//         }\n//       }\n//     `}\n//     render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\n//   />\n// )\n// export default Image\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\n\nimport A from \"components/Link\"\nimport Tag from \"components/Tag\"\n\nimport { serifFont } from \"utils/mixins\"\n\nconst Card = ({ to, href, className, title, description, details, tags }) => (\n  <RootA to={to} href={href} className={className}>\n    <div>\n      {title && <h3>{title}</h3>}\n      {description && <p>{description}</p>}\n      <Flex>\n        {details && <Details>{details}</Details>}\n        {tags && (\n          <Tags>\n            {tags.map(tag => (\n              <Tag key={tag} themed>\n                {tag}\n              </Tag>\n            ))}\n          </Tags>\n        )}\n      </Flex>\n    </div>\n  </RootA>\n)\n\nCard.propTypes = {\n  title: PropTypes.string,\n  to: PropTypes.string,\n  href: PropTypes.string,\n  className: PropTypes.string,\n  description: PropTypes.string,\n  details: PropTypes.string,\n  tags: PropTypes.arrayOf(PropTypes.string),\n}\n\nexport default Card\n\nconst RootA = styled(A)`\n  /* background: linear-gradient(\n      to right top,\n      ${({ theme }) => theme.themePrimary},\n      ${({ theme }) => theme.themeDark}\n    )\n    rgb(255, 255, 255); */\n  /* background: ${({ theme }) => theme.neutralTertiaryAlt}; */\n  display: block;\n  color: inherit;\n  overflow: hidden;\n  padding: 2em;\n  box-shadow: 0 13px 27px -5px ${({ theme }) => theme.neutralLighterAlt},\n    0 8px 16px -8px rgba(0, 0, 0, 0.3), 0 -6px 16px -6px rgba(0, 0, 0, 0.025);\n  transform: translateY(0);\n  border-radius: 8px;\n  transition: all 200ms;\n  border: 1px solid ${({ theme }) => theme.neutralLighter};\n\n  h3 {\n    color: ${({ theme }) => theme.black};\n    margin: 0 0 0.5em 0;\n  }\n\n  p {\n    color: ${({ theme }) => theme.neutralSecondary};\n    font-size: 15px;\n    line-height: 1.3;\n    margin: 0;\n  }\n\n  &:hover {\n    text-decoration: none;\n    transform: translateY(-2px);\n    box-shadow: 0 30px 60px -12px ${({ theme }) => theme.neutralLight},\n      0 18px 36px -18px rgba(0, 0, 0, 0.3),\n      0 -12px 36px -8px rgba(0, 0, 0, 0.025);\n\n    h3 {\n      text-decoration: underline;\n    }\n\n    p {\n      text-decoration: none;\n    }\n  }\n`\n\nconst Flex = styled.div`\n  margin-top: 1.5em;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`\n\nconst Details = styled.div`\n  color: ${({ theme }) => theme.neutralTertiary};\n  font-size: 11px;\n  ${serifFont};\n  font-weight: 400;\n`\n\nconst Tags = styled.div`\n  & > span {\n    margin: 0.25em;\n  }\n`\n"],"sourceRoot":""}