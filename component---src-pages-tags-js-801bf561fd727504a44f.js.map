{"version":3,"sources":["webpack:///./src/pages/tags.js"],"names":["TagsPageRoute","render","allTags","this","props","data","allMarkdownRemark","group","headProps","title","keywords","location","thin","Tags","map","tag","key","fieldValue","to","kebabCase","themed","mRight","mBottom","totalCount","skinny","noPadding","dir","rel","React","Component","pageQuery","styled","div"],"mappings":"oYAYMA,E,gLACJC,OAAA,WACE,IAAMC,EAAUC,KAAKC,MAAMC,KAAKC,kBAAkBC,MAElD,OACE,kBAAC,IAAD,CACEC,UAAW,CACTC,MAAO,OACPC,SAAU,CAAC,OAAQ,kBAErBC,SAAUR,KAAKC,MAAMO,UAErB,kBAAC,IAAD,CAASC,MAAI,GACX,oCACA,kBAACC,EAAD,KACGX,EAAQY,KAAI,SAAAC,GAAG,OACd,kBAAC,IAAD,CACEC,IAAKD,EAAIE,WACTC,GAAE,SAAWC,YAAUJ,EAAIE,YAAzB,KAEF,kBAAC,IAAD,CAAKG,QAAM,EAACC,OAAO,SAASC,QAAQ,SACjCP,EAAIE,WACJF,EAAIQ,WAAa,GAAK,mCAASR,EAAIQ,WAAb,WAM/B,6BAEA,kBAAC,IAAD,CAASC,QAAM,EAACC,WAAS,GACvB,qBACEC,IAAI,WACJC,IAAI,OACJT,GAAG,UAHL,wB,GA/BgBU,IAAMC,WAgDnB7B,YAER,IAAM8B,EAAS,aAchBjB,EAAOkB,IAAOC,IAAV,6DAAGD,CAAH,oC","file":"component---src-pages-tags-js-801bf561fd727504a44f.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport styled from \"styled-components\"\n\nimport Layout from \"components/Layout\"\nimport Section from \"components/Section\"\nimport A from \"components/Link\"\nimport NavButton from \"components/NavButton\"\nimport Tag from \"components/Tag\"\n\nimport { kebabCase } from \"utils/string\"\n\nclass TagsPageRoute extends React.Component {\n  render() {\n    const allTags = this.props.data.allMarkdownRemark.group\n\n    return (\n      <Layout\n        headProps={{\n          title: \"tags\",\n          keywords: [\"tags\", \"brettinternet\"],\n        }}\n        location={this.props.location}\n      >\n        <Section thin>\n          <h2>Tags</h2>\n          <Tags>\n            {allTags.map(tag => (\n              <A\n                key={tag.fieldValue}\n                to={`/tags/${kebabCase(tag.fieldValue)}/`}\n              >\n                <Tag themed mRight=\"0.75em\" mBottom=\"0.5em\">\n                  {tag.fieldValue}\n                  {tag.totalCount > 1 && <span> ({tag.totalCount})</span>}\n                </Tag>\n              </A>\n            ))}\n          </Tags>\n\n          <hr />\n\n          <Section skinny noPadding>\n            <NavButton\n              dir=\"backward\"\n              rel=\"prev\"\n              to=\"/blog/\"\n              css={`\n                justify-content: center;\n              `}\n            >\n              Browse all posts\n            </NavButton>\n          </Section>\n        </Section>\n      </Layout>\n    )\n  }\n}\n\nexport default TagsPageRoute\n\nexport const pageQuery = graphql`\n  query TagsQuery {\n    allMarkdownRemark(\n      limit: 2000\n      filter: { frontmatter: { draft: { ne: true } } }\n    ) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n\nconst Tags = styled.div`\n  a:hover {\n    text-decoration: none;\n  }\n`\n"],"sourceRoot":""}