{"version":3,"sources":["webpack:///./src/templates/tag-page.js","webpack:///./src/components/PostDetails.js","webpack:///./node_modules/core-js/modules/es6.string.link.js","webpack:///./node_modules/core-js/modules/_string-html.js"],"names":["TagRoute","render","postBasePath","this","props","data","site","siteMetadata","posts","allMarkdownRemark","edges","totalCount","tag","pageContext","headProps","title","keywords","location","thin","map","node","link","fields","slug","key","frontmatter","description","excerpt","tags","date","skinny","noPadding","dir","rel","to","React","Component","pageQuery","PostDetails","PostRow","DateCell","noBackground","textMuted","mRight","Title","Description","dangerouslySetInnerHTML","__html","length","Tags","kebabCase","styled","tr","media","sm","span","serifFont","div","theme","neutralPrimaryAlt","td","createHTML","url","$export","fails","defined","quot","string","attribute","value","S","String","p1","replace","module","exports","NAME","exec","O","P","F","test","toLowerCase","split"],"mappings":"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","file":"component---src-templates-tag-page-js-049ba17a208685cb71f8.js","sourcesContent":["import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Layout from \"components/Layout\"\r\nimport Section from \"components/Section\"\r\nimport PostDetails from \"components/PostDetails\"\r\nimport NavButton from \"components/NavButton\"\r\n\r\nclass TagRoute extends React.Component {\r\n  render() {\r\n    const { postBasePath } = this.props.data.site.siteMetadata\r\n    const posts = this.props.data.allMarkdownRemark.edges\r\n    const totalCount = this.props.data.allMarkdownRemark.totalCount\r\n    const tag = this.props.pageContext.tag\r\n    return (\r\n      <Layout\r\n        headProps={{\r\n          title: tag,\r\n          keywords: [tag, \"brettinternet\"],\r\n        }}\r\n        location={this.props.location}\r\n      >\r\n        <Section thin>\r\n          <h3>\r\n            {totalCount} post{totalCount > 1 && \"s\"} tagged with “{tag}”\r\n          </h3>\r\n          <table>\r\n            <tbody>\r\n              {posts.map(({ node }) => {\r\n                const link = (postBasePath || \"\") + node.fields.slug\r\n                return (\r\n                  <PostDetails\r\n                    key={link}\r\n                    link={link}\r\n                    title={node.frontmatter.title}\r\n                    description={node.frontmatter.description || node.excerpt}\r\n                    tags={node.frontmatter.tags}\r\n                    date={node.frontmatter.date}\r\n                  />\r\n                )\r\n              })}\r\n            </tbody>\r\n          </table>\r\n\r\n          <hr />\r\n\r\n          <Section skinny noPadding>\r\n            <NavButton\r\n              dir=\"backward\"\r\n              rel=\"prev\"\r\n              to=\"/tags/\"\r\n              css={`\r\n                justify-content: center;\r\n              `}\r\n            >\r\n              Browse all tags\r\n            </NavButton>\r\n          </Section>\r\n        </Section>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TagRoute\r\n\r\nexport const pageQuery = graphql`\r\n  query TagPage($tag: String) {\r\n    site {\r\n      siteMetadata {\r\n        postBasePath\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      limit: 1000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { tags: { in: [$tag] }, draft: { ne: true } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            title\r\n            tags\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport styled from \"styled-components\"\r\n\r\nimport A from \"components/Link\"\r\nimport Tag from \"components/Tag\"\r\n\r\nimport { kebabCase } from \"utils/string\"\r\nimport { media, serifFont } from \"utils/mixins\"\r\n\r\nconst PostDetails = ({ title, date, link, description, tags }) => (\r\n  <PostRow>\r\n    <DateCell>\r\n      <Tag noBackground textMuted mRight=\"1rem\" noPadding>\r\n        {date}\r\n      </Tag>\r\n    </DateCell>\r\n\r\n    <td>\r\n      <Title>\r\n        <A to={link}>{title}</A>\r\n      </Title>\r\n      <Description>\r\n        <small\r\n          dangerouslySetInnerHTML={{\r\n            __html: description,\r\n          }}\r\n        />\r\n      </Description>\r\n\r\n      {tags && tags.length && (\r\n        <Tags>\r\n          {tags.map(tag => (\r\n            <A key={tag} to={`/tags/${kebabCase(tag)}`}>\r\n              <Tag textMuted mRight=\"0.5rem\">\r\n                {tag}\r\n              </Tag>\r\n            </A>\r\n          ))}\r\n        </Tags>\r\n      )}\r\n    </td>\r\n  </PostRow>\r\n)\r\n\r\nPostDetails.propTypes = {\r\n  title: PropTypes.string,\r\n  date: PropTypes.string,\r\n  link: PropTypes.string,\r\n  description: PropTypes.string,\r\n  tags: PropTypes.arrayOf(PropTypes.string),\r\n}\r\n\r\nexport default PostDetails\r\n\r\nconst PostRow = styled.tr`\r\n  td {\r\n    display: block;\r\n\r\n    ${media.sm`\r\n      display: table-cell;\r\n      padding: 0.5rem 0;\r\n    `}\r\n  }\r\n\r\n  td + td {\r\n    padding-bottom: 1.5em;\r\n\r\n    ${media.sm`\r\n      padding-bottom: 0.5rem;\r\n    `}\r\n  }\r\n`\r\n\r\nconst Title = styled.span`\r\n  ${serifFont};\r\n  font-size: 19px;\r\n  font-weight: bold;\r\n  display: inline-block;\r\n`\r\n\r\nconst Description = styled.div`\r\n  ${serifFont};\r\n  font-size: 17px;\r\n  margin: 0.5rem 0;\r\n  color: ${({ theme }) => theme.neutralPrimaryAlt};\r\n`\r\n\r\nconst Tags = styled.div`\r\n  a:hover {\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\nconst DateCell = styled.td`\r\n  vertical-align: top;\r\n\r\n  ${media.sm`\r\n    text-align: right;\r\n  `}\r\n`\r\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n"],"sourceRoot":""}