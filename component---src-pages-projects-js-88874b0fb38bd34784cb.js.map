{"version":3,"sources":["webpack:///./src/pages/projects.js","webpack:///./src/components/Card.js"],"names":["ProjectsPage","data","location","projects","site","siteMetadata","projectsFound","length","headProps","title","keywords","thin","Cards","slice","map","card","index","key","pageQuery","styled","div","media","sm","Card","to","href","className","description","details","tags","RootA","Flex","Details","Tags","tag","themed","A","theme","neutralLighterAlt","neutralLighter","black","neutralSecondary","neutralLight","neutralTertiary","serifFont"],"mappings":"gyBA2DeA,UAjDM,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACpBC,EAAaF,EAAKG,KAAKC,aAAvBF,SACFG,EAAgBH,GAAYA,EAASI,OAE3C,OACE,kBAAC,IAAD,CACEC,UAAW,CACTC,MAAO,WACPC,SAAU,CAAC,WAAY,gBAAiB,SAE1CR,SAAUA,GAEV,qBACES,MAAI,GAKJ,0CAEF,yBAME,kBAACC,EAAD,KACGN,GACCH,EAASU,MAAM,EAAG,GAAGC,KAAI,SAACC,EAAMC,GAAP,OACvB,yBAAKC,IAAKD,GACR,kBAAC,IAASD,QAIjBT,GAAiBH,EAASI,OAAS,GAClC,kBAACK,EAAD,KACGN,GACCH,EAASU,MAAM,EAAG,GAAGC,KAAI,SAACC,EAAMC,GAAP,OACvB,yBAAKC,IAAKD,GACR,kBAAC,IAASD,WAYrB,IAAMG,EAAS,YAehBN,EAAQO,IAAOC,IAAV,kEAAGD,CAAH,8FAUPE,IAAMC,GAVC,O,iCC5EX,oDAwCeC,IA/BF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWjB,EAAxB,EAAwBA,MAAOkB,EAA/B,EAA+BA,YAAaC,EAA5C,EAA4CA,QAASC,EAArD,EAAqDA,KAArD,OACX,kBAACC,EAAD,CAAON,GAAIA,EAAIC,KAAMA,EAAMC,UAAWA,GACpC,6BACGjB,GAAS,4BAAKA,GACdkB,GAAe,2BAAIA,GACpB,kBAACI,EAAD,KACGH,GAAW,kBAACI,EAAD,KAAUJ,GACrBC,GACC,kBAACI,EAAD,KACGJ,EAAKf,KAAI,SAAAoB,GAAG,OACX,kBAAC,IAAD,CAAKjB,IAAKiB,EAAKC,QAAM,GAClBD,WAsBjB,IAAMJ,EAAQX,YAAOiB,KAAV,8DAAGjB,CAAH,iiBAYsB,qBAAGkB,MAAkBC,qBAKhC,qBAAGD,MAAkBE,kBAG9B,qBAAGF,MAAkBG,SAKrB,qBAAGH,MAAkBI,oBASE,qBAAGJ,MAAkBK,gBAcnDX,EAAOZ,IAAOC,IAAV,6DAAGD,CAAH,wGAQJa,EAAUb,IAAOC,IAAV,gEAAGD,CAAH,mDACF,qBAAGkB,MAAkBM,kBAE5BC,KAIEX,EAAOd,IAAOC,IAAV,6DAAGD,CAAH","file":"component---src-pages-projects-js-88874b0fb38bd34784cb.js","sourcesContent":["import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Layout from \"components/Layout\"\r\nimport Section from \"components/Section\"\r\nimport Card from \"components/Card\"\r\n\r\nimport { media } from \"utils/mixins\"\r\n\r\nconst ProjectsPage = ({ data, location }) => {\r\n  const { projects } = data.site.siteMetadata\r\n  const projectsFound = projects && projects.length\r\n\r\n  return (\r\n    <Layout\r\n      headProps={{\r\n        title: \"projects\",\r\n        keywords: [\"projects\", \"brettinternet\", \"work\"],\r\n      }}\r\n      location={location}\r\n    >\r\n      <Section\r\n        thin\r\n        css={`\r\n          padding-bottom: 0;\r\n        `}\r\n      >\r\n        <h2>Projects:</h2>\r\n      </Section>\r\n      <Section\r\n        css={`\r\n          padding-top: 0;\r\n          padding-bottom: 0;\r\n        `}\r\n      >\r\n        <Cards>\r\n          {projectsFound &&\r\n            projects.slice(0, 2).map((card, index) => (\r\n              <div key={index}>\r\n                <Card {...card} />\r\n              </div>\r\n            ))}\r\n        </Cards>\r\n        {projectsFound && projects.length > 2 && (\r\n          <Cards>\r\n            {projectsFound &&\r\n              projects.slice(2, 4).map((card, index) => (\r\n                <div key={index}>\r\n                  <Card {...card} />\r\n                </div>\r\n              ))}\r\n          </Cards>\r\n        )}\r\n      </Section>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default ProjectsPage\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        projects {\r\n          title\r\n          description\r\n          details\r\n          href\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst Cards = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  flex-direction: column;\r\n\r\n  a {\r\n    margin-top: 1em;\r\n    margin-bottom: 1em;\r\n  }\r\n\r\n  ${media.sm`\r\n    flex-direction: row;\r\n\r\n    & > div {\r\n      width: 50%;\r\n\r\n      &:first-child a {\r\n        margin-left: 0;\r\n      }\r\n\r\n      &:last-child a {\r\n        margin-right: 0;\r\n      }\r\n    }\r\n    \r\n    a {\r\n      margin: 1em;\r\n    }\r\n  `}\r\n`\r\n\r\n//// add project images\r\n// const Image = () => (\r\n//   <StaticQuery\r\n//     query={graphql`\r\n//       query {\r\n//         placeholderImage: file(relativePath: { eq: \"gatsby-astronaut.png\" }) {\r\n//           childImageSharp {\r\n//             fluid(maxWidth: 300) {\r\n//               ...GatsbyImageSharpFluid\r\n//             }\r\n//           }\r\n//         }\r\n//       }\r\n//     `}\r\n//     render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\r\n//   />\r\n// )\r\n// export default Image\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport styled from \"styled-components\"\r\n\r\nimport A from \"components/Link\"\r\nimport Tag from \"components/Tag\"\r\n\r\nimport { serifFont } from \"utils/mixins\"\r\n\r\nconst Card = ({ to, href, className, title, description, details, tags }) => (\r\n  <RootA to={to} href={href} className={className}>\r\n    <div>\r\n      {title && <h3>{title}</h3>}\r\n      {description && <p>{description}</p>}\r\n      <Flex>\r\n        {details && <Details>{details}</Details>}\r\n        {tags && (\r\n          <Tags>\r\n            {tags.map(tag => (\r\n              <Tag key={tag} themed>\r\n                {tag}\r\n              </Tag>\r\n            ))}\r\n          </Tags>\r\n        )}\r\n      </Flex>\r\n    </div>\r\n  </RootA>\r\n)\r\n\r\nCard.propTypes = {\r\n  title: PropTypes.string,\r\n  to: PropTypes.string,\r\n  href: PropTypes.string,\r\n  className: PropTypes.string,\r\n  description: PropTypes.string,\r\n  details: PropTypes.string,\r\n  tags: PropTypes.arrayOf(PropTypes.string),\r\n}\r\n\r\nexport default Card\r\n\r\nconst RootA = styled(A)`\r\n  /* background: linear-gradient(\r\n      to right top,\r\n      ${({ theme }) => theme.themePrimary},\r\n      ${({ theme }) => theme.themeDark}\r\n    )\r\n    rgb(255, 255, 255); */\r\n  /* background: ${({ theme }) => theme.neutralTertiaryAlt}; */\r\n  display: block;\r\n  color: inherit;\r\n  overflow: hidden;\r\n  padding: 2em;\r\n  box-shadow: 0 13px 27px -5px ${({ theme }) => theme.neutralLighterAlt},\r\n    0 8px 16px -8px rgba(0, 0, 0, 0.3), 0 -6px 16px -6px rgba(0, 0, 0, 0.025);\r\n  transform: translateY(0);\r\n  border-radius: 8px;\r\n  transition: all 200ms;\r\n  border: 1px solid ${({ theme }) => theme.neutralLighter};\r\n\r\n  h3 {\r\n    color: ${({ theme }) => theme.black};\r\n    margin: 0 0 0.5em 0;\r\n  }\r\n\r\n  p {\r\n    color: ${({ theme }) => theme.neutralSecondary};\r\n    font-size: 15px;\r\n    line-height: 1.3;\r\n    margin: 0;\r\n  }\r\n\r\n  &:hover {\r\n    text-decoration: none;\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 30px 60px -12px ${({ theme }) => theme.neutralLight},\r\n      0 18px 36px -18px rgba(0, 0, 0, 0.3),\r\n      0 -12px 36px -8px rgba(0, 0, 0, 0.025);\r\n\r\n    h3 {\r\n      text-decoration: underline;\r\n    }\r\n\r\n    p {\r\n      text-decoration: none;\r\n    }\r\n  }\r\n`\r\n\r\nconst Flex = styled.div`\r\n  margin-top: 1.5em;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\n\r\nconst Details = styled.div`\r\n  color: ${({ theme }) => theme.neutralTertiary};\r\n  font-size: 11px;\r\n  ${serifFont};\r\n  font-weight: 400;\r\n`\r\n\r\nconst Tags = styled.div`\r\n  & > span {\r\n    margin: 0.25em;\r\n  }\r\n`\r\n"],"sourceRoot":""}