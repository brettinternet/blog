{"version":3,"sources":["webpack:///./src/components/Utterances.js","webpack:///./src/templates/blog-post.js","webpack:///./src/images/icons/twitter.svg"],"names":["Utterances","repo","theme","issueTerm","label","rootElm","useRef","useEffect","utterances","document","createElement","utterancesConfig","src","crossorigin","async","Object","keys","forEach","configKey","setAttribute","current","appendChild","id","ref","defaultProps","BlogPostTemplate","render","this","props","location","data","post","markdownRemark","site","siteMetadata","siteRepo","postBasePath","pageContext","previous","next","slug","frontmatter","title","description","date","tags","Layout","headProps","excerpt","Section","thin","Tag","noBackground","textMuted","mRight","style","paddingLeft","Title","Body","dangerouslySetInnerHTML","__html","html","Tags","length","map","tag","key","to","kebabCase","themed","interactive","PostActions","href","Dot","target","rel","height","NavButton","buttons","dir","fields","name","css","ThemeContext","Consumer","React","Component","pageQuery","styled","h1","div","serifFont","themePrimary","media","xs","span","Twitter","module","exports","default"],"mappings":"oPAMMA,G,WAAa,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,MACtCC,EAAUC,iBAAO,MAoBvB,OAlBAC,qBAAU,WACR,IAAMC,EAAaC,SAASC,cAAc,UACpCC,EAAmB,CACvBC,IATM,gCAUNX,OACA,aAAcE,EACdD,MAAM,UAAWA,EACjBE,QACAS,YAAa,YACbC,OAAO,GAGTC,OAAOC,KAAKL,GAAkBM,SAAQ,SAAAC,GACpCV,EAAWW,aAAaD,EAAWP,EAAiBO,OAEtDb,EAAQe,QAAQC,YAAYb,KAC3B,IAEI,yBAAKc,GAvBI,aAuBWC,IAAKlB,MAalCL,EAAWwB,aAAe,CACxBtB,MAAO,SAGMF,Q,gpBC3BTyB,E,gLACJC,OAAA,WAAU,IAAD,EACoBC,KAAKC,MAAxBC,EADD,EACCA,SAAUC,EADX,EACWA,KACZC,EAAOD,EAAKE,eAFX,EAGwCF,EAAKG,KAAKC,aAAjDC,EAHD,EAGCA,SAAUC,EAHX,EAGWA,aAAc5B,EAHzB,EAGyBA,WAHzB,EAI0BmB,KAAKC,MAAMS,YAApCC,EAJD,EAICA,SAAUC,EAJX,EAIWA,KAAMC,EAJjB,EAIiBA,KAJjB,EAKoCT,EAAKU,YAAxCC,EALD,EAKCA,MAAOC,EALR,EAKQA,YAAaC,EALrB,EAKqBA,KAAMC,EAL3B,EAK2BA,KAElC,OACE,kBAACC,EAAA,EAAD,CACEjB,SAAUA,EACVkB,UAAW,CACTL,QACAC,YAAaA,GAAeZ,EAAKiB,UAGnC,kBAACC,EAAA,EAAD,CAASC,MAAI,GACX,6BACE,kBAACC,EAAA,EAAD,CACEC,cAAY,EACZC,WAAS,EACTC,OAAO,OACPC,MAAO,CAAEC,YAAa,IAErBZ,IAGL,kBAACa,EAAD,KAAQf,GACR,kBAACgB,EAAD,KACE,yBAAKC,wBAAyB,CAAEC,OAAQ7B,EAAK8B,SAG/C,kBAACC,EAAD,KACGjB,GACCA,EAAKkB,QACLlB,EAAKmB,KAAI,SAAAC,GAAG,OACV,kBAAC,IAAD,CAAGC,IAAKD,EAAKE,GAAE,SAAWC,YAAUH,IAClC,kBAACd,EAAA,EAAD,CAAKkB,QAAM,EAACf,OAAO,SAASgB,aAAW,GACpCL,QAMX,kBAACM,EAAD,KACE,6BACE,8BAOA,kBAAC,IAAD,CAAGC,KAASrC,EAAL,4BAAyCK,EAAzC,YAAP,kBAIA,kBAACiC,EAAD,UACA,qBACED,KAAI,iCAAmC3C,EAAS2C,KAChDE,OAAO,SACPC,IAAI,sBACJjC,MAAM,cAON,kBAAC,IAAD,CAAYkC,OAAO,SAIvB,kBAACC,EAAA,EAAD,CACEC,QAAO,YACDxC,EACA,CACE,CACEyC,IAAK,WACLJ,IAAK,OACLR,IAAK/B,GAAgB,IAAME,EAAS0C,OAAOxC,KAC3CyC,KAAM3C,EAASG,YAAYC,MAC3BwC,IAAI,qBAGR,IAXC,EAYD3C,EACA,CACE,CACEwC,IAAK,UACLJ,IAAK,OACLR,IAAK/B,GAAgB,IAAMG,EAAKyC,OAAOxC,KACvCyC,KAAM1C,EAAKE,YAAYC,MACvBwC,IAAI,qBAGR,SAMZ,6BAEA,kBAACjC,EAAA,EAAD,KACGzC,GACC,kBAAC2E,EAAA,EAAaC,SAAd,MACG,SAAAlF,GAAK,OACJ,kBAAC,EAAD,CACED,KAAMO,EAAWP,KACjBE,UAAU,WACVC,MAAOI,EAAWJ,MAClBF,MAAOA,U,GAhHMmF,IAAMC,WA6HxBC,GAFE9D,YAEO,cAyBhBgC,EAAQ+B,IAAOC,GAAV,uEAAGD,CAAH,8BAIL9B,EAAO8B,IAAOE,IAAV,sEAAGF,CAAH,iOACNG,KAGS,SAAA/D,GAAK,OAAIA,EAAM1B,MAAM0F,gBA+B5B9B,EAAO0B,IAAOE,IAAV,sEAAGF,CAAH,oCAMJjB,EAAciB,IAAOE,IAAV,6EAAGF,CAAH,mKAeXK,IAAMC,GAfK,MAqBXrB,EAAMe,IAAOO,KAAV,qEAAGP,CAAH,2C,uICzOT,IAAIH,EAAQ,EAAQ,GAEpB,SAASW,EAASpE,GACd,OAAOyD,EAAM3E,cAAc,MAAMkB,EAAM,CAACyD,EAAM3E,cAAc,QAAQ,CAAC,IAAM,GAAG,WAAW2E,EAAM3E,cAAc,OAAO,CAAC,EAAI,ooBAAooB,IAAM,MAGvwBsF,EAAQxE,aAAe,CAAC,KAAO,MAAM,QAAU,aAE/CyE,EAAOC,QAAUF,EAEjBA,EAAQG,QAAUH","file":"component---src-templates-blog-post-js-0968fb82300499c50a22.js","sourcesContent":["import React, { useEffect, useRef } from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst src = \"https://utteranc.es/client.js\"\nconst elementId = \"utterances\"\n\nconst Utterances = ({ repo, theme, issueTerm, label }) => {\n  const rootElm = useRef(null)\n\n  useEffect(() => {\n    const utterances = document.createElement(\"script\")\n    const utterancesConfig = {\n      src,\n      repo,\n      \"issue-term\": issueTerm,\n      theme: `github-${theme}`,\n      label,\n      crossorigin: \"anonymous\",\n      async: true,\n    }\n\n    Object.keys(utterancesConfig).forEach(configKey => {\n      utterances.setAttribute(configKey, utterancesConfig[configKey])\n    })\n    rootElm.current.appendChild(utterances)\n  }, [])\n\n  return <div id={elementId} ref={rootElm} />\n}\n\nUtterances.propTypes = {\n  repo: PropTypes.string.isRequired,\n  theme: PropTypes.oneOf([\"light\", \"dark\"]),\n  issueTerm: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.oneOf([\"pathname\", \"og:title\", \"title\", \"url\"]),\n  ]),\n  label: PropTypes.string,\n}\n\nUtterances.defaultProps = {\n  theme: \"light\",\n}\n\nexport default Utterances\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport styled, { css } from \"styled-components\"\nimport ThemeContext from \"components/ThemeContext\"\nimport { media } from \"utils/mixins\"\n\nimport Layout from \"components/Layout\"\nimport Section from \"components/Section\"\nimport A from \"components/Link\"\nimport Tag from \"components/Tag\"\nimport TwitterSvg from \"images/icons/twitter.svg\"\nimport NavButton from \"components/NavButton\"\nimport Utterances from \"components/Utterances\"\n\nimport { serifFont } from \"utils/mixins\"\nimport { kebabCase } from \"utils/string\"\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const { location, data } = this.props\n    const post = data.markdownRemark\n    const { siteRepo, postBasePath, utterances } = data.site.siteMetadata\n    const { previous, next, slug } = this.props.pageContext\n    const { title, description, date, tags } = post.frontmatter\n\n    return (\n      <Layout\n        location={location}\n        headProps={{\n          title,\n          description: description || post.excerpt,\n        }}\n      >\n        <Section thin>\n          <div>\n            <Tag\n              noBackground\n              textMuted\n              mRight=\"1rem\"\n              style={{ paddingLeft: 0 }}\n            >\n              {date}\n            </Tag>\n          </div>\n          <Title>{title}</Title>\n          <Body>\n            <div dangerouslySetInnerHTML={{ __html: post.html }} />\n          </Body>\n\n          <Tags>\n            {tags &&\n              tags.length &&\n              tags.map(tag => (\n                <A key={tag} to={`/tags/${kebabCase(tag)}`}>\n                  <Tag themed mRight=\"0.5rem\" interactive>\n                    {tag}\n                  </Tag>\n                </A>\n              ))}\n          </Tags>\n\n          <PostActions>\n            <div>\n              <Dot\n                css={`\n                  margin-left: 0;\n                `}\n              >\n                >\n              </Dot>\n              <A href={`${siteRepo}/edit/source/content/blog${slug}index.md`}>\n                Edit on GitHub\n              </A>\n\n              <Dot>Â·</Dot>\n              <A\n                href={`https://twitter.com/share?url=${location.href}`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                title=\"Tweet post\"\n                css={css`\n                  svg {\n                    vertical-align: top;\n                  }\n                `}\n              >\n                <TwitterSvg height=\"12\" />\n              </A>\n            </div>\n\n            <NavButton\n              buttons={[\n                ...(previous\n                  ? [\n                      {\n                        dir: \"backward\",\n                        rel: \"prev\",\n                        to: (postBasePath || \"\") + previous.fields.slug,\n                        name: previous.frontmatter.title,\n                        css: `font-size: 13px;`,\n                      },\n                    ]\n                  : []),\n                ...(next\n                  ? [\n                      {\n                        dir: \"forward\",\n                        rel: \"next\",\n                        to: (postBasePath || \"\") + next.fields.slug,\n                        name: next.frontmatter.title,\n                        css: `font-size: 13px;`,\n                      },\n                    ]\n                  : []),\n              ]}\n            />\n          </PostActions>\n        </Section>\n\n        <hr />\n\n        <Section>\n          {utterances && (\n            <ThemeContext.Consumer>\n              {theme => (\n                <Utterances\n                  repo={utterances.repo}\n                  issueTerm=\"pathname\"\n                  label={utterances.label}\n                  theme={theme}\n                />\n              )}\n            </ThemeContext.Consumer>\n          )}\n        </Section>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        siteRepo\n        postBasePath\n        utterances {\n          repo\n          label\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160, format: PLAIN)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        tags\n      }\n    }\n  }\n`\n\nconst Title = styled.h1`\n  margin: 0.25em 0 0.5em 0;\n`\n\nconst Body = styled.div`\n  ${serifFont};\n\n  a {\n    color: ${props => props.theme.themePrimary};\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n\n  img {\n    max-width: 125%;\n  }\n\n  line-height: 1.6;\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    margin-top: 1.5em;\n    margin-bottom: 0.5em;\n  }\n\n  figcaption {\n    font-size: 0.7em;\n    text-align: center;\n    margin: auto;\n    font-style: italic;\n  }\n`\n\nconst Tags = styled.div`\n  a:hover {\n    text-decoration: none;\n  }\n`\n\nconst PostActions = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: nowrap;\n  align-items: center;\n  margin-top: 3em;\n  font-size: 13px;\n\n  a svg {\n    fill: currentColor;\n  }\n\n  & > ul {\n    display: none;\n\n    ${media.xs`\n      display: block;\n    `}\n  }\n`\n\nconst Dot = styled.span`\n  font-family: monospace;\n  margin: 0 0.5em;\n`\n","var React = require('react');\n\nfunction Twitter (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"title\",{\"key\":0},\"Twitter\"),React.createElement(\"path\",{\"d\":\"M23.954 4.569c-.885.389-1.83.654-2.825.775 1.014-.611 1.794-1.574 2.163-2.723-.951.555-2.005.959-3.127 1.184-.896-.959-2.173-1.559-3.591-1.559-2.717 0-4.92 2.203-4.92 4.917 0 .39.045.765.127 1.124C7.691 8.094 4.066 6.13 1.64 3.161c-.427.722-.666 1.561-.666 2.475 0 1.71.87 3.213 2.188 4.096-.807-.026-1.566-.248-2.228-.616v.061c0 2.385 1.693 4.374 3.946 4.827-.413.111-.849.171-1.296.171-.314 0-.615-.03-.916-.086.631 1.953 2.445 3.377 4.604 3.417-1.68 1.319-3.809 2.105-6.102 2.105-.39 0-.779-.023-1.17-.067 2.189 1.394 4.768 2.209 7.557 2.209 9.054 0 13.999-7.496 13.999-13.986 0-.209 0-.42-.015-.63.961-.689 1.8-1.56 2.46-2.548l-.047-.02z\",\"key\":1})]);\n}\n\nTwitter.defaultProps = {\"role\":\"img\",\"viewBox\":\"0 0 24 24\"};\n\nmodule.exports = Twitter;\n\nTwitter.default = Twitter;\n"],"sourceRoot":""}