{"version":3,"sources":["webpack:///./src/templates/tag-page.js","webpack:///./src/components/PostDetails.js","webpack:///./node_modules/core-js/modules/es6.string.link.js"],"names":["TagRoute","render","postBasePath","this","props","data","site","siteMetadata","posts","allMarkdownRemark","edges","totalCount","tag","pageContext","headProps","title","keywords","location","thin","map","node","link","fields","slug","key","frontmatter","description","excerpt","tags","date","skinny","noPadding","dir","rel","to","React","Component","pageQuery","PostDetails","PostRow","DateCell","noBackground","textMuted","mRight","Title","Description","dangerouslySetInnerHTML","__html","length","Tags","kebabCase","interactive","styled","tr","media","sm","span","serifFont","div","theme","neutralPrimaryAlt","td","createHTML","url"],"mappings":"4UAQMA,E,gLACJC,OAAA,WAAU,IACAC,EAAiBC,KAAKC,MAAMC,KAAKC,KAAKC,aAAtCL,aACFM,EAAQL,KAAKC,MAAMC,KAAKI,kBAAkBC,MAC1CC,EAAaR,KAAKC,MAAMC,KAAKI,kBAAkBE,WAC/CC,EAAMT,KAAKC,MAAMS,YAAYD,IACnC,OACE,kBAAC,IAAD,CACEE,UAAW,CACTC,MAAOH,EACPI,SAAU,CAACJ,EAAK,kBAElBK,SAAUd,KAAKC,MAAMa,UAErB,kBAAC,IAAD,CAASC,MAAI,GACX,4BACGP,EADH,QACoBA,EAAa,GAAK,IADtC,iBACyDC,EADzD,KAGA,+BACE,+BACGJ,EAAMW,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNC,GAAQnB,GAAgB,IAAMkB,EAAKE,OAAOC,KAChD,OACE,kBAAC,IAAD,CACEC,IAAKH,EACLA,KAAMA,EACNN,MAAOK,EAAKK,YAAYV,MACxBW,YAAaN,EAAKK,YAAYC,aAAeN,EAAKO,QAClDC,KAAMR,EAAKK,YAAYG,KACvBC,KAAMT,EAAKK,YAAYI,YAOjC,6BAEA,kBAAC,IAAD,CAASC,QAAM,EAACC,WAAS,GACvB,qBACEC,IAAI,WACJC,IAAI,OACJC,GAAG,UAHL,uB,GAvCWC,IAAMC,WAwDdpC,YAER,IAAMqC,EAAS,c,scCbPC,IA3CK,SAAC,GAAD,IAAGvB,EAAH,EAAGA,MAAOc,EAAV,EAAUA,KAAMR,EAAhB,EAAgBA,KAAMK,EAAtB,EAAsBA,YAAaE,EAAnC,EAAmCA,KAAnC,OAClB,kBAACW,EAAD,KACE,kBAACC,EAAD,KACE,kBAAC,IAAD,CAAKC,cAAY,EAACC,WAAS,EAACC,OAAO,OAAOZ,WAAS,GAChDF,IAIL,4BACE,kBAACe,EAAD,KACE,kBAAC,IAAD,CAAGV,GAAIb,GAAON,IAEhB,kBAAC8B,EAAD,KACE,2BACEC,wBAAyB,CACvBC,OAAQrB,MAKbE,GAAQA,EAAKoB,QACZ,kBAACC,EAAD,KACGrB,EAAKT,KAAI,SAAAP,GAAG,OACX,kBAAC,IAAD,CAAGY,IAAKZ,EAAKsB,GAAE,SAAWgB,YAAUtC,IAClC,kBAAC,IAAD,CAAK8B,WAAS,EAACC,OAAO,SAASQ,aAAW,GACvCvC,WAoBjB,IAAM2B,EAAUa,IAAOC,GAAV,2EAAGD,CAAH,2DAIPE,IAAMC,GAJC,KAaPD,IAAMC,GAbC,MAmBPX,EAAQQ,IAAOI,KAAV,yEAAGJ,CAAH,8DACPK,KAMEZ,EAAcO,IAAOM,IAAV,+EAAGN,CAAH,kDACbK,KAGO,qBAAGE,MAAkBC,qBAG1BX,EAAOG,IAAOM,IAAV,wEAAGN,CAAH,oCAMJZ,EAAWY,IAAOS,GAAV,4EAAGT,CAAH,2BAGVE,IAAMC,GAHI,O,iCC5Fd,EAAQ,IAAR,CAA0B,QAAQ,SAAUO,GAC1C,OAAO,SAAcC,GACnB,OAAOD,EAAW3D,KAAM,IAAK,OAAQ4D","file":"component---src-templates-tag-page-js-e9487e18ae56e8438ff0.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"components/Layout\"\nimport Section from \"components/Section\"\nimport PostDetails from \"components/PostDetails\"\nimport NavButton from \"components/NavButton\"\n\nclass TagRoute extends React.Component {\n  render() {\n    const { postBasePath } = this.props.data.site.siteMetadata\n    const posts = this.props.data.allMarkdownRemark.edges\n    const totalCount = this.props.data.allMarkdownRemark.totalCount\n    const tag = this.props.pageContext.tag\n    return (\n      <Layout\n        headProps={{\n          title: tag,\n          keywords: [tag, \"brettinternet\"],\n        }}\n        location={this.props.location}\n      >\n        <Section thin>\n          <h3>\n            {totalCount} post{totalCount > 1 && \"s\"} tagged with “{tag}”\n          </h3>\n          <table>\n            <tbody>\n              {posts.map(({ node }) => {\n                const link = (postBasePath || \"\") + node.fields.slug\n                return (\n                  <PostDetails\n                    key={link}\n                    link={link}\n                    title={node.frontmatter.title}\n                    description={node.frontmatter.description || node.excerpt}\n                    tags={node.frontmatter.tags}\n                    date={node.frontmatter.date}\n                  />\n                )\n              })}\n            </tbody>\n          </table>\n\n          <hr />\n\n          <Section skinny noPadding>\n            <NavButton\n              dir=\"backward\"\n              rel=\"prev\"\n              to=\"/tags/\"\n              css={`\n                justify-content: center;\n              `}\n            >\n              Browse all tags\n            </NavButton>\n          </Section>\n        </Section>\n      </Layout>\n    )\n  }\n}\n\nexport default TagRoute\n\nexport const pageQuery = graphql`\n  query TagPage($tag: String) {\n    site {\n      siteMetadata {\n        postBasePath\n      }\n    }\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] }, draft: { ne: true } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\n\nimport A from \"components/Link\"\nimport Tag from \"components/Tag\"\n\nimport { kebabCase } from \"utils/string\"\nimport { media, serifFont } from \"utils/mixins\"\n\nconst PostDetails = ({ title, date, link, description, tags }) => (\n  <PostRow>\n    <DateCell>\n      <Tag noBackground textMuted mRight=\"1rem\" noPadding>\n        {date}\n      </Tag>\n    </DateCell>\n\n    <td>\n      <Title>\n        <A to={link}>{title}</A>\n      </Title>\n      <Description>\n        <small\n          dangerouslySetInnerHTML={{\n            __html: description,\n          }}\n        />\n      </Description>\n\n      {tags && tags.length && (\n        <Tags>\n          {tags.map(tag => (\n            <A key={tag} to={`/tags/${kebabCase(tag)}`}>\n              <Tag textMuted mRight=\"0.5rem\" interactive>\n                {tag}\n              </Tag>\n            </A>\n          ))}\n        </Tags>\n      )}\n    </td>\n  </PostRow>\n)\n\nPostDetails.propTypes = {\n  title: PropTypes.string,\n  date: PropTypes.string,\n  link: PropTypes.string,\n  description: PropTypes.string,\n  tags: PropTypes.arrayOf(PropTypes.string),\n}\n\nexport default PostDetails\n\nconst PostRow = styled.tr`\n  td {\n    display: block;\n\n    ${media.sm`\n      display: table-cell;\n      padding: 0.5rem 0;\n    `}\n  }\n\n  td + td {\n    padding-bottom: 1.5em;\n\n    ${media.sm`\n      padding-bottom: 0.5rem;\n    `}\n  }\n`\n\nconst Title = styled.span`\n  ${serifFont};\n  font-size: 19px;\n  font-weight: bold;\n  display: inline-block;\n`\n\nconst Description = styled.div`\n  ${serifFont};\n  font-size: 17px;\n  margin: 0.5rem 0;\n  color: ${({ theme }) => theme.neutralPrimaryAlt};\n`\n\nconst Tags = styled.div`\n  a:hover {\n    text-decoration: none;\n  }\n`\n\nconst DateCell = styled.td`\n  vertical-align: top;\n\n  ${media.sm`\n    text-align: right;\n  `}\n`\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n"],"sourceRoot":""}