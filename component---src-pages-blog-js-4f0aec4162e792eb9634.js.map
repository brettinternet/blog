{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./src/components/PostDetails.js","webpack:///./node_modules/core-js/modules/es6.string.link.js","webpack:///./node_modules/core-js/modules/_string-html.js"],"names":["BlogPage","data","location","postBasePath","site","siteMetadata","posts","allMarkdownRemark","edges","headProps","title","keywords","thin","map","node","link","fields","slug","key","frontmatter","date","description","excerpt","tags","pageQuery","PostDetails","PostRow","DateCell","noBackground","textMuted","mRight","noPadding","Title","to","Description","dangerouslySetInnerHTML","__html","length","Tags","tag","kebabCase","styled","tr","media","sm","span","serifFont","div","theme","neutralPrimaryAlt","td","createHTML","url","this","$export","fails","defined","quot","string","attribute","value","S","String","p1","replace","module","exports","NAME","exec","O","P","F","test","toLowerCase","split"],"mappings":"0FAAA,gGAyCeA,UAlCE,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAChBC,EAAiBF,EAAKG,KAAKC,aAA3BF,aACFG,EAAQL,EAAKM,kBAAkBC,MACrC,OACE,kBAAC,IAAD,CACEC,UAAW,CACTC,MAAO,OACPC,SAAU,CAAC,OAAQ,kBAErBT,SAAUA,GAEV,kBAAC,IAAD,CAASU,MAAI,GACX,+BACE,+BACGN,EAAMO,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNC,GAAQZ,GAAgB,IAAMW,EAAKE,OAAOC,KAChD,OACE,kBAAC,IAAD,CACEC,IAAKJ,EAAKE,OAAOC,KACjBP,MAAOI,EAAKK,YAAYT,OAASI,EAAKE,OAAOC,KAC7CG,KAAMN,EAAKK,YAAYC,KACvBL,KAAMA,EACNM,YAAaP,EAAKK,YAAYE,aAAeP,EAAKQ,QAClDC,KAAMT,EAAKK,YAAYI,eAalC,IAAMC,EAAS,c,scCUPC,IA3CK,SAAC,GAAD,IAAGf,EAAH,EAAGA,MAAOU,EAAV,EAAUA,KAAML,EAAhB,EAAgBA,KAAMM,EAAtB,EAAsBA,YAAaE,EAAnC,EAAmCA,KAAnC,OAClB,kBAACG,EAAD,KACE,kBAACC,EAAD,KACE,kBAAC,IAAD,CAAKC,cAAY,EAACC,WAAS,EAACC,OAAO,OAAOC,WAAS,GAChDX,IAIL,4BACE,kBAACY,EAAD,KACE,kBAAC,IAAD,CAAGC,GAAIlB,GAAOL,IAEhB,kBAACwB,EAAD,KACE,2BACEC,wBAAyB,CACvBC,OAAQf,MAKbE,GAAQA,EAAKc,QACZ,kBAACC,EAAD,KACGf,EAAKV,KAAI,SAAA0B,GAAG,OACX,kBAAC,IAAD,CAAGrB,IAAKqB,EAAKN,GAAE,SAAWO,YAAUD,IAClC,kBAAC,IAAD,CAAKV,WAAS,EAACC,OAAO,UACnBS,WAoBjB,IAAMb,EAAUe,IAAOC,GAAV,2EAAGD,CAAH,2DAIPE,IAAMC,GAJC,KAaPD,IAAMC,GAbC,MAmBPZ,EAAQS,IAAOI,KAAV,yEAAGJ,CAAH,8DACPK,KAMEZ,EAAcO,IAAOM,IAAV,+EAAGN,CAAH,kDACbK,KAGO,qBAAGE,MAAkBC,qBAG1BX,EAAOG,IAAOM,IAAV,wEAAGN,CAAH,oCAMJd,EAAWc,IAAOS,GAAV,4EAAGT,CAAH,2BAGVE,IAAMC,GAHI,O,iCC5Fd,EAAQ,IAAR,CAA0B,QAAQ,SAAUO,GAC1C,OAAO,SAAcC,GACnB,OAAOD,EAAWE,KAAM,IAAK,OAAQD,Q,oBCJzC,IAAIE,EAAU,EAAQ,GAClBC,EAAQ,EAAQ,IAChBC,EAAU,EAAQ,IAClBC,EAAO,KAEPN,EAAa,SAAUO,EAAQnB,EAAKoB,EAAWC,GACjD,IAAIC,EAAIC,OAAON,EAAQE,IACnBK,EAAK,IAAMxB,EAEf,MADkB,KAAdoB,IAAkBI,GAAM,IAAMJ,EAAY,KAAOG,OAAOF,GAAOI,QAAQP,EAAM,UAAY,KACtFM,EAAK,IAAMF,EAAI,KAAOtB,EAAM,KAErC0B,EAAOC,QAAU,SAAUC,EAAMC,GAC/B,IAAIC,EAAI,GACRA,EAAEF,GAAQC,EAAKjB,GACfG,EAAQA,EAAQgB,EAAIhB,EAAQiB,EAAIhB,GAAM,WACpC,IAAIiB,EAAO,GAAGL,GAAM,KACpB,OAAOK,IAASA,EAAKC,eAAiBD,EAAKE,MAAM,KAAKrC,OAAS,KAC7D,SAAUgC","file":"component---src-pages-blog-js-4f0aec4162e792eb9634.js","sourcesContent":["import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Layout from \"components/Layout\"\r\nimport Section from \"components/Section\"\r\nimport PostDetails from \"components/PostDetails\"\r\n\r\nconst BlogPage = ({ data, location }) => {\r\n  const { postBasePath } = data.site.siteMetadata\r\n  const posts = data.allMarkdownRemark.edges\r\n  return (\r\n    <Layout\r\n      headProps={{\r\n        title: \"blog\",\r\n        keywords: [\"blog\", \"brettinternet\"],\r\n      }}\r\n      location={location}\r\n    >\r\n      <Section thin>\r\n        <table>\r\n          <tbody>\r\n            {posts.map(({ node }) => {\r\n              const link = (postBasePath || \"\") + node.fields.slug\r\n              return (\r\n                <PostDetails\r\n                  key={node.fields.slug}\r\n                  title={node.frontmatter.title || node.fields.slug}\r\n                  date={node.frontmatter.date}\r\n                  link={link}\r\n                  description={node.frontmatter.description || node.excerpt}\r\n                  tags={node.frontmatter.tags}\r\n                />\r\n              )\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </Section>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogPage\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        postBasePath\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { draft: { ne: true } } }\r\n    ) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            title\r\n            tags\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport styled from \"styled-components\"\r\n\r\nimport A from \"components/Link\"\r\nimport Tag from \"components/Tag\"\r\n\r\nimport { kebabCase } from \"utils/string\"\r\nimport { media, serifFont } from \"utils/mixins\"\r\n\r\nconst PostDetails = ({ title, date, link, description, tags }) => (\r\n  <PostRow>\r\n    <DateCell>\r\n      <Tag noBackground textMuted mRight=\"1rem\" noPadding>\r\n        {date}\r\n      </Tag>\r\n    </DateCell>\r\n\r\n    <td>\r\n      <Title>\r\n        <A to={link}>{title}</A>\r\n      </Title>\r\n      <Description>\r\n        <small\r\n          dangerouslySetInnerHTML={{\r\n            __html: description,\r\n          }}\r\n        />\r\n      </Description>\r\n\r\n      {tags && tags.length && (\r\n        <Tags>\r\n          {tags.map(tag => (\r\n            <A key={tag} to={`/tags/${kebabCase(tag)}`}>\r\n              <Tag textMuted mRight=\"0.5rem\">\r\n                {tag}\r\n              </Tag>\r\n            </A>\r\n          ))}\r\n        </Tags>\r\n      )}\r\n    </td>\r\n  </PostRow>\r\n)\r\n\r\nPostDetails.propTypes = {\r\n  title: PropTypes.string,\r\n  date: PropTypes.string,\r\n  link: PropTypes.string,\r\n  description: PropTypes.string,\r\n  tags: PropTypes.arrayOf(PropTypes.string),\r\n}\r\n\r\nexport default PostDetails\r\n\r\nconst PostRow = styled.tr`\r\n  td {\r\n    display: block;\r\n\r\n    ${media.sm`\r\n      display: table-cell;\r\n      padding: 0.5rem 0;\r\n    `}\r\n  }\r\n\r\n  td + td {\r\n    padding-bottom: 1.5em;\r\n\r\n    ${media.sm`\r\n      padding-bottom: 0.5rem;\r\n    `}\r\n  }\r\n`\r\n\r\nconst Title = styled.span`\r\n  ${serifFont};\r\n  font-size: 19px;\r\n  font-weight: bold;\r\n  display: inline-block;\r\n`\r\n\r\nconst Description = styled.div`\r\n  ${serifFont};\r\n  font-size: 17px;\r\n  margin: 0.5rem 0;\r\n  color: ${({ theme }) => theme.neutralPrimaryAlt};\r\n`\r\n\r\nconst Tags = styled.div`\r\n  a:hover {\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\nconst DateCell = styled.td`\r\n  vertical-align: top;\r\n\r\n  ${media.sm`\r\n    text-align: right;\r\n  `}\r\n`\r\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n"],"sourceRoot":""}